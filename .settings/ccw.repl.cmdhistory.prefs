cmdhistory=["(as-and-bs \\"1 2 5 8\\")" "(+ 1 1)" "(ns clojushlab.core\\r\\n  (\:require [instaparse.core \:as insta]))\\r\\n\\r\\n(def vec-parser\\r\\n  (insta/parser\\r\\n    \\"instrs \= (expr? <';'>* <space>?)*\\r\\n     expr \= (<space>? operation <space>?)*\\r\\n     operation \= matrix? <space>? op <space>? matrix?\\r\\n     (* operateurs *)\\r\\n     op \= '*' | '+' | '-'\\r\\n     (* Les variables *)\\r\\n     matrix \= <'m('> <space>? matrow* <space>? <')'>\\r\\n     (* Represente une ligne de la matrice *)\\r\\n     matrow \= <'['> <space>? (number <space>)*  <']'>\\r\\n     (* Les espaces *)\\r\\n     <space> \= \#'[\\\\\\\\s]*'\\r\\n     (* Les constantes de 0 \u00E0 9 *)\\r\\n     number \= \#'[0-9]+'\\"\\r\\n  ))\\r\\n\\r\\n(vec-parser \\"m([0 0 0 0 0 0]) + m([1 2 3 4 5]) - m([1 2 3 5 8]) * m([5454 151 484 4]) * m([5454 151 484 4]) ; m([1 2 5 8 7]) + m([1]);\\")" "(ns clojushlab.core\\r\\n  (\:require [instaparse.core \:as insta]))\\r\\n\\r\\n(def vec-parser\\r\\n  (insta/parser\\r\\n    \\"instrs \= ((assign? | expr?) <';'> <space>?)*\\r\\n     \\r\\n     (* expression *)\\r\\n     expr \= (<space>? (assign | operation) <space>?)*\\r\\n     \\r\\n     (* Affectation *)\\r\\n     assign \= var <space>? <'\='> <space>? (operation | number)  \\r\\n     \\r\\n     (* variables *)\\r\\n     var \= \#'[a-zA-Z0-9]+'\\r\\n     \\r\\n     (* operations *)\\r\\n     operation \= matrix <space>? op <space>? matrix\\r\\n\\r\\n     (* operateurs *)\\r\\n     op \= '*' | '+' | '-'\\r\\n\\r\\n     (* matrices *)\\r\\n     matrix \= <'m('> <space>? matrow* <space>? <')'>\\r\\n\\r\\n     (* Represente une ligne de la matrice *)\\r\\n     matrow \= <'['> <space>? (number <space>)*  <']'>\\r\\n\\r\\n     (* Les espaces *)\\r\\n     <space> \= \#'[\\\\\\\\s]*'\\r\\n\\r\\n     (* Les constantes de 0 \u00E0 9 *)\\r\\n     number \= \#'[0-9]+'\\"\\r\\n  ))\\r\\n\\r\\n(vec-parser \\"m([5454 151 484 4]) * m([5454 151 484 4]); v \= m([1 2 5 8 7]) + m([1]);\\")"]
eclipse.preferences.version=1
